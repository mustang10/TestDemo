{
	"info": {
		"_postman_id": "6184c172-2c7e-409b-a8b3-4140d26d28d6",
		"name": "Get, Post, Put and Delete",
		"description": "This collection should be run with a delay of 5 ms or more to get credible results. Due to the system performance when processing Post, Put, and Delete requests.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ADD Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Adding '+ pm.collectionVariables.get('name'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{petId}},\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"{{categoryName}}\"\n  },\n  \"name\": \"{{name}}\",\n  \"photoUrls\": [\n    \"{{photoUrl}}\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"{{tagName}}\"\n    }\n  ],\n  \"status\": \"{{status}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverUrl}}{{endpint}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					]
				},
				"description": "Given all required data to add a new pet to the store\n\nThen the pet should be added with the given data\n\nBut the ids should be generated by the system"
			},
			"response": []
		},
		{
			"name": "Check Added Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//Read expected results",
							"let id = pm.variables.get('petId');",
							"let categoryId = pm.variables.get('categoryId');",
							"let categoryName = pm.variables.get('categoryName');",
							"let name = pm.variables.get('name');",
							"let photoUrl = pm.variables.get('photoUrl');",
							"let tagName = pm.variables.get('tagName');",
							"let status = pm.variables.get('status');",
							"",
							"//Read result",
							"const pet = pm.response.json();",
							"",
							"pm.test('Check id', function () {",
							"    pm.expect(pet.id).to.be.eq(id)",
							"});",
							"",
							"pm.test('Ckeck category name', function () {",
							"    pm.expect(pet.category.name).to.be.eq(categoryName)",
							"});",
							"",
							"pm.test('Ckeck name', function () {",
							"    pm.expect(pet.name).to.be.eq(name)",
							"});",
							"",
							"pm.test('Ckeck photoUrl', function () {",
							"    pm.expect(pet.photoUrls).to.includes(photoUrl)",
							"});",
							"",
							"pm.test('Check tag name', function () {",
							"    pm.expect(pet.tags[0].name).to.deep.includes(tagName)",
							"});",
							"pm.test('Ckeck status', function () {",
							"    pm.expect(pet.status).to.be.eq(status)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Checking if '+ pm.collectionVariables.get('name') + ' was successfully added.')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverUrl}}{{endpint}}/{{petId}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					],
					"path": [
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Changing the '+ pm.collectionVariables.get('name') + ' status to '+ data.soldStatus)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{petId}},\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"{{categoryName}}\"\n  },\n  \"name\": \"{{name}}\",\n  \"photoUrls\": [\n    \"{{photoUrl}}\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"{{tagName}}\"\n    }\n  ],\n  \"status\": \"{{soldStatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverUrl}}{{endpint}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Updated Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//Read expected results",
							"let id = pm.variables.get('petId');",
							"let categoryId = pm.variables.get('categoryId');",
							"let categoryName = pm.variables.get('categoryName');",
							"let name = pm.variables.get('name');",
							"let photoUrl = pm.variables.get('photoUrl');",
							"let tagName = pm.variables.get('tagName');",
							"let status = pm.variables.get('soldStatus');",
							"",
							"//Read result",
							"const pet = pm.response.json();",
							"",
							"pm.test('Check id', function () {",
							"    pm.expect(pet.id).to.be.eq(id)",
							"});",
							"",
							"pm.test('Ckeck category name', function () {",
							"    pm.expect(pet.category.name).to.be.eq(categoryName)",
							"});",
							"",
							"pm.test('Ckeck name', function () {",
							"    pm.expect(pet.name).to.be.eq(name)",
							"});",
							"",
							"pm.test('Ckeck photoUrl', function () {",
							"    pm.expect(pet.photoUrls).to.includes(photoUrl)",
							"});",
							"",
							"pm.test('Check tag name', function () {",
							"    pm.expect(pet.tags[0].name).to.deep.includes(tagName)",
							"});",
							"pm.test('Ckeck status', function () {",
							"    pm.expect(pet.status).to.be.eq(status)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Checking if '+ pm.collectionVariables.get('name') + ' status was successfully changed.')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverUrl}}{{endpint}}/{{petId}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					],
					"path": [
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Added Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json()",
							"",
							"let id = pm.variables.get('petId');",
							"const expectedResponse = {",
							"    \"code\": 200,",
							"    \"type\": \"unknown\",",
							"    \"message\": id.toString()",
							"};",
							"pm.test('Check delete response body', function(){",
							"    pm.expect(response).to.be.deep.eq(expectedResponse);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Deleting '+ pm.collectionVariables.get('name'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{serverUrl}}{{endpint}}/{{petId}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					],
					"path": [
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Deleted Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check status', function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"var response = pm.response.json()",
							"",
							"const expectedResponse = {",
							"    \"code\": 404,",
							"    \"type\": \"error\",",
							"    \"message\": \"Pet not found\"",
							"};",
							"pm.test('Check delete response body', function(){",
							"    pm.expect(response).to.be.deep.eq(expectedResponse);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Checking if '+ pm.collectionVariables.get('name') + ' status was successfully deleted.')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverUrl}}{{endpint}}/{{petId}}",
					"host": [
						"{{serverUrl}}{{endpint}}"
					],
					"path": [
						"{{petId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpint",
			"value": "/pet"
		},
		{
			"key": "categoryName",
			"value": "Dog"
		},
		{
			"key": "name",
			"value": "Champ"
		},
		{
			"key": "photoUrl",
			"value": "img1"
		},
		{
			"key": "tagName",
			"value": "cool"
		},
		{
			"key": "status",
			"value": "available"
		},
		{
			"key": "petId",
			"value": "10"
		},
		{
			"key": "soldStatus",
			"value": "sold"
		}
	]
}